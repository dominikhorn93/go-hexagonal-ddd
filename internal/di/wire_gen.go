// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"hexagonal-example/adapter/persistence"
	"hexagonal-example/adapter/web"
	"hexagonal-example/application/service"
	"net/http"
)

// Injectors from wire.go:

// InitializeApp is our main Wire injector. It returns something that can run.
func InitializeApp() (*http.Server, error) {
	userRepository := persistence.NewInMemoryUserRepo()
	userUseCase := service.NewUserService(userRepository)
	userController := web.NewUserController(userUseCase)
	server := NewHTTPServer(userController)
	return server, nil
}

// wire.go:

// We define provider sets for each layer/adapter
var (
	PersistenceSet = wire.NewSet(persistence.NewInMemoryUserRepo)

	ServiceSet = wire.NewSet(service.NewUserService)

	WebSet = wire.NewSet(web.NewUserController)
)

// NewHTTPServer is a custom constructor that sets up the routes.
func NewHTTPServer(userController *web.UserController) *http.Server {

	mux := http.NewServeMux()
	mux.HandleFunc("/users", userController.CreateUserHandler)

	srv := &http.Server{
		Addr:    ":8080",
		Handler: mux,
	}
	return srv
}
